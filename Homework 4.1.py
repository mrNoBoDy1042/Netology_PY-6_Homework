# -*- coding: cp1251 -*-
#######################################################################
# Homework 4.1 Командная строка для секретаря
#######################################################################
# Необходимые функции:
#   p - people - спрашивает номер документа и выводит имя человека
#   l - list - выводит все документы в формате: тип, номер, ФИО владельца
#   s - shelf - спрашивает номер документа и выводит номер полки
#   a - add - добавление нового документа
#   d - delete - удаление документа
#   m - move - перемещение документа
#   as - add shelf - добавление полки
#######################################################################
# Использованные подпрограммы:
#   1)find_owner - принимает номер документа и выводит ФИО владельца
#   2)show_all - выводит все имеющиеся документы
#   3)find_shelf - принимает номер документа и выводит номер полки,
# где он находится  
#   4)add_new_document - принимает тип документа, номер документа,
# ФИО владельца и номер полки. Заносит данные о документе и добавляет
# его на полку
#   5)delete_document - принимает номер документа и удалает его из каталога
# и полки
#   6)move_document - принимает номер документа и номер полки. Переносит
# документ на заданную полку
#   7)add_new_shelf - добавлет полку для хранения документов
#   8)user_input - принимает команды и проверяет их корректность
#   9)help_user - выводит список доступных команд
#########################################################################

import sys


#########################################################################
# Исходные данные
#########################################################################
documents = [
        {"type": "passport", "number": "2207 876234", "name": "Василий Гупкин"},
        {"type": "invoice", "number": "11-2", "name": "Геннадий Покемонов"},
        {"type": "insurance", "number": "10006", "name": "Аристарх Павлов"}
        ]
directories = {
        '1': ['2207 876234', '11-2'],
        '2': ['10006'],
        '3': []
        }


#######################################################################
# Функция find_owner
#######################################################################
def find_owner(number):
    #Поиск по всем документам
    for document in documents:
        #Если совпал номер - вернуть имя
        if document["number"] == number:
            return document["name"]


#######################################################################
# Функция show_all
#######################################################################
def show_all():
    #Вывод документов и полок, на которых они находятся
    for index, document in enumerate(documents):
        shelf_number = find_shelf(document["number"])
        print("{0}. {1} | {2} | {3} | Номер полки: {4}".format(index+1, document["type"], document["number"], document["name"], shelf_number))


#######################################################################
# Функция find_shelf
#######################################################################
def find_shelf(number):
    #Поиск по полкам
    for shelf in directories.keys():
        #Поиск по документам на полке
        for document in directories[shelf]:
            #Если документ найден - вернуть номер полки
            if document == number:
                return shelf

            
#######################################################################
#Функция для добавления документа на существующую полку
#######################################################################
def put_on_shelf(document_number):
    shelf = input("Введите номер полки:")
    #Проверка существования полки
    shelf_exists = directories.get(shelf)
    #Если существует - добавить на полку
    if shelf_exists != None:
        directories[shelf].append(document_number)
    #Иначе - ввод до дех пор, пока не будет введена существующая полка
    else:
        print("Такой полки нет")
        put_on_shelf(document_number)


#######################################################################
# Функция add_new_document
#######################################################################
def add_new_document():
    owners_name = input("Введите ФИО владельца:")
    document_type = input("Введите тип документа:")
    document_number = input("Введите номер документа:")
    #Добавление документа в каталог документов
    documents.append({"type":document_type, "number":document_number, "name":owners_name})
    #Добавление документа на полку
    put_on_shelf(document_number)
    print()
    #Вывод обновленного каталога документов
    show_all()


#######################################################################
# Функция move_document
#######################################################################
def move_document(document_number):
    #Нахождение полки, на которой находится документ
    origin_shelf = find_shelf(document_number)
    #Если полки нет - то документ не найден
    if origin_shelf == None:
        print("Документ не найден")
    #Иначе - выбор полки для перемещения и само перемещение документа
    else:
        put_on_shelf(document_number)
        directories[origin_shelf].remove(document_number)
        print()
        #Вывод обновленного каталога
        show_all()


#######################################################################
# Функция add_new_shelf
#######################################################################
def add_new_shelf():
    last_shelf = "0"
    for shelf in directories.keys():
        if last_shelf < shelf:
            last_shelf = shelf
    last_shelf = int(last_shelf)+1
    directories[str(last_shelf)] = []
    print()
    for shelf in directories:
        print("Полка {0}: {1}".format(shelf, directories[shelf]))


#######################################################################
# Функция delete_document
#######################################################################
def delete_document(document_number):
    shelf = find_shelf(document_number)
    #Если полки нет - то документ не найден
    if shelf == None:
        print("Документ не найден")
    #Иначе - удаление документа
    else:
        for document in documents:
            if document["number"] == document_number:
                 documents.remove(document)
        directories[shelf].remove(document_number)
        print()
        #Вывод обновленного каталога
        show_all()


#######################################################################
# Функция help_user
#######################################################################
def help_user():
    print("Команды: \n\
p - people - спрашивает номер документа и выводит имя человека\n\
l - list - выводит все документы в формате: тип, номер, ФИО владельца\n\
s - shelf - спрашивает номер документа и выводит номер полки\n\
a - add - добавление нового документа\n\
d - delete - удаление документа\n\
m - move - перемещение документа\n\
as - add shelf - добавление полки\n\
h - help - выводит все доступные команды\n\
e - exit - выход из программы")


#######################################################################
# Функция user_input
#######################################################################
def user_input():
    #Обработчик команд
    command = input("Введите команду:")
    if command.lower() == "p":
        #команда people
        document_number = input("Введите номер документа:")
        owners_name = find_owner(document_number)
        if owners_name == None:
            print("Документ не найден")
        else:
            print("Имя владельца: " +owners_name)
    elif command.lower() == "l":
        #команда list
        show_all()
    elif command.lower() == "s":
        #команда shelf        
        document_number = input("Введите номер документа:")
        shelf_number = find_shelf(document_number)
        if shelf_number == None:
            print("Документ не найден")
        else:
            print("Номер полки: " +shelf_number)
    elif command.lower() == "m":
        #команда move
        document_number = input("Введите номер документа:")
        move_document(document_number)
    elif command.lower() == "a":
        #команда add
        add_new_document()
    elif command.lower() == "d":
        #команда delete
        document_number = input("Введите номер документа:")
        delete_document(document_number)
    elif command.lower() == "as":
        #команда add shelf
        add_new_shelf()
    elif command.lower() == "h":
        #команда для помощи пользователю
        help_user()
    elif command.lower() == "e":
        #команда для завершения работы
        print("Завершение работы. Нажмите любую клавишу")
        input()
        sys.exit()
    else:
        print("Неверная команда. Воспользуйтесь командой \"h\" для вывода списка доступных команд")

        
#######################################################################
# Функция main
#######################################################################
def main():
    help_user()
    print("-------------------------------------")
    while True:
        user_input()
        print("-------------------------------------")

main()
